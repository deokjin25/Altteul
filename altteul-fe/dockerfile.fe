# Build Stage
FROM node:18-alpine AS build

# Create app directory and set permissions
WORKDIR /app

# Add non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001 && \
    chown -R nodejs:nodejs /app

USER nodejs

# Install dependencies
COPY --chown=nodejs:nodejs package.json yarn.lock ./
RUN yarn install --frozen-lockfile

# Copy the rest of the project files
COPY --chown=nodejs:nodejs . .

# Build the project
RUN yarn build

# Production Stage
FROM nginx:alpine

# Copy build files from build stage
COPY --from=build /app/dist /usr/share/nginx/html

# Add nginx configuration if needed
# COPY nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]